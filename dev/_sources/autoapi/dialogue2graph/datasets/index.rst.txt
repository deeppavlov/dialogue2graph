dialogue2graph.datasets
=======================

.. py:module:: dialogue2graph.datasets


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/dialogue2graph/datasets/augment_dialogues/index
   /autoapi/dialogue2graph/datasets/complex_dialogues/index


Classes
-------

.. autoapisummary::

   dialogue2graph.datasets.CycleGraphGenerator
   dialogue2graph.datasets.DialogueAugmenter


Package Contents
----------------

.. py:class:: CycleGraphGenerator(**data)

   Bases: :py:obj:`pydantic.BaseModel`


   Class for generating graph with cycles


   .. py:attribute:: cache
      :type:  Optional[Any]
      :value: None



   .. py:class:: Config

      .. py:attribute:: arbitrary_types_allowed
         :value: True



      .. py:attribute:: extra
         :value: 'allow'




   .. py:method:: invoke(model: langchain_core.language_models.chat_models.BaseChatModel, prompt: langchain.prompts.PromptTemplate, seed=None, **kwargs) -> dialogue2graph.pipelines.core.graph.BaseGraph

      Generate a cyclic dialogue graph based on the topic input.



   .. py:method:: ainvoke(*args, **kwargs)
      :async:


      Async version of invoke - to be implemented



   .. py:method:: evaluate(*args, report_type='dict', **kwargs)


.. py:class:: DialogueAugmenter(/, **data: Any)

   Bases: :py:obj:`dialogue2graph.pipelines.core.algorithms.DialogAugmentation`


   Class for dialogue augmentation.

   Augments dialogues while preserving structure and conversation flow by rephrasing original dialogue lines.


   .. py:attribute:: model_storage
      :type:  dialogue2graph.pipelines.model_storage.ModelStorage
      :value: None



   .. py:attribute:: generation_llm
      :type:  str
      :value: None



   .. py:attribute:: formatting_llm
      :type:  str
      :value: None



   .. py:method:: invoke(dialogue: dialogue2graph.pipelines.core.dialogue.Dialogue, prompt: str, topic: str = '') -> Union[list[dialogue2graph.pipelines.core.dialogue.Dialogue], str]

      Augment dialogue while preserving conversation structure.

      :param dialogue: Input Dialogue object to augment
      :param prompt: Required augmentation prompt template
      :param topic: Contextual topic for augmentation (default: empty)

      :returns: List of augmented Dialogue objects or error message



   .. py:method:: ainvoke(*args, **kwargs)
      :async:


      Async version of invoke



   .. py:method:: evaluate(dialogue: dialogue2graph.pipelines.core.dialogue.Dialogue, prompt: str, topic: str = '') -> dict
      :async:


      Evaluate augmentation quality with dictionary report format.



