dialogue2graph.pipelines.d2g_llm.pipeline
=========================================

.. py:module:: dialogue2graph.pipelines.d2g_llm.pipeline

.. autoapi-nested-parse::

   D2GLLMPipeline
   --------------

   The module contains pipeline for graph generation using LLMs.



Classes
-------

.. autoapisummary::

   dialogue2graph.pipelines.d2g_llm.pipeline.D2GLLMPipeline


Module Contents
---------------

.. py:class:: D2GLLMPipeline(name: str, model_storage: dialogue2graph.pipelines.model_storage.ModelStorage, grouping_llm: str = 'three_stages_llm_grouping_llm:v1', filling_llm: str = 'three_stages_llm_filling_llm:v1', formatting_llm: str = 'three_stages_llm_formatting_llm:v1', sim_model: str = 'three_stages_llm_sim_model:v1', step2_evals: list[Callable] = metrics.DGEvalBase, end_evals: list[Callable] = metrics.DGEvalBase)

   Bases: :py:obj:`dialogue2graph.pipelines.core.pipeline.BasePipeline`


   D2GLLMPipeline is a pipeline class for generating graphs based on provided dialogues using LLMs.

   .. attribute:: name

      The name of the pipeline.

      :type: str

   .. attribute:: model_storage

      An object to manage and store models used in the pipeline.

      :type: ModelStorage

   .. attribute:: grouping_llm

      The key for the grouping LLM model in the model storage. Defaults to "d2g_llm_grouping_llm:v1".

      :type: str

   .. attribute:: filling_llm

      The key for the filling LLM model in the model storage. Defaults to "d2g_llm_filling_llm:v1".

      :type: str

   .. attribute:: formatting_llm

      The key for the formatting LLM model in the model storage. Defaults to "d2g_llm_formatting_llm:v1".

      :type: str

   .. attribute:: sim_model

      The key for the similarity embedder model in the model storage. Defaults to "d2g_llm_sim_model:v1".

      :type: str

   .. attribute:: step2_evals

      A list of evaluation functions to be applied at step 2 of the pipeline. Defaults to None.

      :type: list[Callable], optional

   .. attribute:: end_evals

      A list of evaluation functions to be applied at the end of the pipeline. Defaults to None.

      :type: list[Callable], optional


