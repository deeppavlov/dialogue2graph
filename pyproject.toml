[tool.poetry]
name = "dialogue2graph"
version = "0.1.1"
description = "Dialogue2Graph is a project for creating dialogue graphs based on input dialogues."
authors = ["Denis Kuznetsov <kuznetsov.den.p@gmail.com>, Chirkin Andrey <andruhabobr@gmail.com>, Anastasia Voznyuk <>, Anna Mikhailova <>, Maria Molchanova <>, Yuri Peshkichev <>"]
readme = "README.md"
package-mode = true

[tool.poetry.dependencies]
python = "^3.10,<3.13"
tqdm = "^4.66.5"
poethepoet = "^0.29.0"
pandas = "^2.2.3"
colorama = "^0.4.6"
networkx = "^3.3"
langchain = "^0.3.1"
langchain-openai = "^0.2.1"
matplotlib = "^3.9.2"
langchain-community = "^0.3.1"
pydantic = "*"
sentence-transformers = "^3.4.1"
click = "^8.1.8"
pyyaml = "^6.0.2"
langchain-chroma = "^0.2.2"
langchain-huggingface = "^0.1.2"
accelerate = "^1.6.0"
unstructured = {extras = ["md"], version = "^0.17.2"}
datasets = "^3.5.0"
psycopg2-binary = "^2.9.10"
# optimum-intel = {git = "https://github.com/huggingface/optimum-intel.git", extras = ["neural-compressor"]}
# torch = {version = "^2.7.0+cpu", source = "pytorch-cpu"}
# torchvision = {version = "^0.22.0+cpu", source = "pytorch-cpu"}
# torchaudio = {version = "^2.7.0+cpu", source = "pytorch-cpu"}
# intel-extension-for-pytorch = "^2.7.0"
# oneccl-bind-pt = {version = "^2.7.0+cpu", source = "oneccl"}


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
nbsphinx = "*"
sphinx-favicon = "*"
sphinx-gallery = "*"
sphinx-copybutton = "^0.5.2"
sphinxcontrib-katex = "*"
pydata-sphinx-theme = "^0.16.1"
sphinxcontrib-httpdomain = "*"
sphinx-autodoc-typehints = "*"
jupytext = "*"
jupyter = "*"
sphinx-autoapi = "*"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"
deptry = "^0.23.0"


[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[[tool.poetry.source]]
name = "oneccl"
url = "https://pytorch-extension.intel.com/release-whl/stable/cpu/us/"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "*"


[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-cov = "*"
coverage = { version = "!=7.3.3,!=7.6.6", extras = ["toml"] }


[tool.poe]
default_task_type = "script"

[tool.poe.tasks]
test = "scripts.test:quick_test"
coverage = "scripts.test:coverage"
lint = "scripts.codestyle:_check"
format = "scripts.codestyle:_format"
check_metrics = "scripts.check_metrics:test_d2g_pipelines"

[tool.poetry.scripts]
dialogue2graph = "dialogue2graph.cli.main:cli"
