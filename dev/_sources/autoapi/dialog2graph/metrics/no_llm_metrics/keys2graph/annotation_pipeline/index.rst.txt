dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline
==================================================================

.. py:module:: dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline


Functions
---------

.. autoapisummary::

   dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline.annotate_single_graph
   dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline.annotate_multiple_graphs
   dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline.compute_dialog_metrics
   dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline.construct_graph_from_annotation
   dialog2graph.metrics.no_llm_metrics.keys2graph.annotation_pipeline.update_annotation_with_metrics


Module Contents
---------------

.. py:function:: annotate_single_graph(dialog_graph: Dict[str, Any], prompt_instructions: str, model_name: str, temperature: float, api_key: str, base_url: str, supports_user_role: bool = True) -> Optional[Dict[str, Any]]

.. py:function:: annotate_multiple_graphs(data_list: List[Dict[str, Any]], prompt_instructions: str, model_name: str, temperature: float, api_key: str, base_url: str, supports_user_role: bool = True) -> List[Dict[str, Any]]

   data_list is expected to have elements like:
   {
     "graph": {...},
     "annotation": {...} (optional),
     "generated_graph": {...} (optional)
   }
   We'll annotate each "graph" if annotation is missing or if user wants to refresh it.


.. py:function:: compute_dialog_metrics(dialog_graphs)

   Вычисляет метрики для списка диалоговых графов:
   - max_dialog_depth: максимальное число переходов (ребер) в самом длинном пути
   - max_branching_factor: максимальное число исходящих переходов из одного узла
   - max_dialog_length: максимальное число узлов (ходов) в самом длинном пути

   :param dialog_graphs: список графов, каждый граф – словарь с ключом "graph",
                         содержащим "nodes" и "edges"
   :return: словарь с тремя ключами: 'max_dialog_depth', 'max_branching_factor', 'max_dialog_length'


.. py:function:: construct_graph_from_annotation(annotation)

   На основе аннотации строит упрощённое представление графа диалога.
   Предполагается, что диалог линейный и узлы берутся из mandatory_nodes,
   а для каждого узла берутся шаблоны из bot_utterances_templates.


.. py:function:: update_annotation_with_metrics(input_dict)

   Функция принимает на вход словарь с ключом "annotation". Если значения для
   max_dialog_depth, max_branching_factor или max_dialog_length равны "unknown",
   они вычисляются на основе структуры диалога (mandatory_nodes) и обновляются.

   :param input_dict: исходный словарь с аннотацией
   :return: обновлённый словарь с заполненными метриками, если они были неизвестны


