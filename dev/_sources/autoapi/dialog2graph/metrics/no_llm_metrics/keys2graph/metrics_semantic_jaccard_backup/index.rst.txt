dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup
==============================================================================

.. py:module:: dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup

.. autoapi-nested-parse::

   metrics_semantic_jaccard.py
   ---------------------------
   Semantic‑Jaccard‑метрики для пар диалоговых графов.

   Главная точка входа:  evaluate_graph_lists(...)
   или класс‑обёртка GraphSimilarityEvaluator.

   • Для каждой пары графов вычисляется:
       - semantic_jaccard_nodes
       - semantic_jaccard_edges
   • Узлы и рёбра считаются «совпавшими», если
     косинусная близость их эмбеддингов ≥ threshold.



Attributes
----------

.. autoapisummary::

   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.DEFAULT_EMBED_MODEL
   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.DEFAULT_THRESHOLD
   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.BATCH


Classes
-------

.. autoapisummary::

   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.GraphSimilarityEvaluator


Functions
---------

.. autoapisummary::

   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.embed_texts
   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.cosine
   dialog2graph.metrics.no_llm_metrics.keys2graph.metrics_semantic_jaccard_backup.evaluate_graph_lists


Module Contents
---------------

.. py:data:: DEFAULT_EMBED_MODEL
   :value: 'text-embedding-3-small'


.. py:data:: DEFAULT_THRESHOLD
   :value: 0.83


.. py:data:: BATCH
   :value: 96


.. py:function:: embed_texts(texts: List[str], model: str) -> List[numpy.ndarray]

   Запрашиваем OpenAI embeddings батчами и возвращаем list[np.ndarray].
   Совместимо с новой версией SDK: response.data -> List[Embedding]


.. py:function:: cosine(a: numpy.ndarray, b: numpy.ndarray) -> float

.. py:class:: GraphSimilarityEvaluator(embed_model: str = DEFAULT_EMBED_MODEL, threshold: float = DEFAULT_THRESHOLD)

   .. py:attribute:: embed_model
      :value: 'text-embedding-3-small'



   .. py:attribute:: threshold
      :value: 0.83



   .. py:method:: evaluate_pairs(original_graphs: List[Dict[str, Any]], generated_graphs: List[Dict[str, Any]], json_out_path: str) -> Tuple[List[Dict[str, Any]], float, float]


.. py:function:: evaluate_graph_lists(original_graphs: List[Dict[str, Any]], generated_graphs: List[Dict[str, Any]], output_path: str, model_name: str = DEFAULT_EMBED_MODEL, threshold: float = DEFAULT_THRESHOLD)

